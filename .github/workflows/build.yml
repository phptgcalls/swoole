name: Build And Publish

on:
  workflow_dispatch:
    inputs:
      build-shared-libs:
        description: 'Build shared libraries'
        required: false
        default: true
        type: boolean
      build-static-libs:
        description: 'Build static libraries'
        required: false
        default: true
        type: boolean
      build-wheels:
        description: 'Build wheels'
        required: false
        default: false
        type: boolean
      linux-build:
        description: 'Build for Linux'
        required: false
        default: true
        type: boolean
      linux-arm64-build:
        description: 'Build for Linux ARM64'
        required: false
        default: true
        type: boolean
      macos-build:
        description: 'Build for macOS'
        required: false
        default: false
        type: boolean
      windows-build:
        description: 'Build for Windows'
        required: false
        default: false
        type: boolean
      android-build:
        description: 'Build for Android'
        required: false
        default: false
        type: boolean
      publish:
        description: 'Publish the library'
        required: false
        default: true
        type: boolean

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Set matrix
        id: set-matrix
        run: |
          build_list=""
          if [[ "${{ github.event.inputs.linux-build }}" == "true" ]]; then
            build_list+=",{\"os\":\"ubuntu-latest\",\"shared_name\":\"linux-x86_64\"}"
          fi
          if [[ "${{ github.event.inputs.linux-arm64-build }}" == "true" ]]; then
            build_list+=",{\"os\":\"arm64-server\",\"shared_name\":\"linux-arm64\"}"
          fi
          if [[ "${{ github.event.inputs.macos-build }}" == "true" ]]; then
            build_list+=",{\"os\":\"macos-15\",\"shared_name\":\"macos-arm64\"}"
          fi
          if [[ "${{ github.event.inputs.windows-build }}" == "true" ]]; then
            build_list+=",{\"os\":\"windows-2022\",\"shared_name\":\"windows-x86_64\"}"
          fi
          # Add more platforms as needed, e.g. Android, with its proper configuration.
          if [[ -n "$build_list" ]]; then
            build_list="${build_list:1}"
          fi
          matrix=$(echo "{\"include\":[$build_list]}")
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  build:
    if: github.event.inputs.build-wheels == 'true' || github.event.inputs.build-shared-libs == 'true' || github.event.inputs.build-static-libs == 'true'
    needs: setup
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: ${{ fromJson(needs.setup.outputs.matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up environment
        run: |
          echo "Running on ${{ matrix.os }} with shared target name: ${{ matrix.shared_name }}"

      # Build shared libraries if enabled
      - name: Build shared libraries
        if: ${{ github.event.inputs.build-shared-libs == 'true' }}
        run: |
          echo "Building shared libraries for ${{ matrix.shared_name }}..."
          chmod +x ./scripts/build-shared.sh
          ./scripts/build-shared.sh "${{ matrix.shared_name }}"
      
      # Build static libraries if enabled
      - name: Build static libraries
        if: ${{ github.event.inputs.build-static-libs == 'true' }}
        run: |
          echo "Building static libraries for ${{ matrix.shared_name }}..."
          chmod +x ./scripts/build-static.sh
          ./scripts/build-static.sh "${{ matrix.shared_name }}"

      # Build wheels if enabled
      - name: Build wheels
        if: ${{ github.event.inputs.build-wheels == 'true' }}
        run: |
          echo "Building wheels for ${{ matrix.shared_name }}..."
          chmod +x ./scripts/build-wheels.sh
          ./scripts/build-wheels.sh "${{ matrix.shared_name }}"

      # (Optional) Verify Swoole using docker on Linux
      - name: Verify Swoole Installation (Linux only)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: docker run --rm phpswoole/swoole "php --ri swoole"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-${{ matrix.shared_name }}
          path: build/output/

  publish:
    if: github.event.inputs.publish == 'true' && startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: build_artifacts

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          body: "Automated release of Swoole shared library version ${{ github.ref }}."

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: build_artifacts/**/*
